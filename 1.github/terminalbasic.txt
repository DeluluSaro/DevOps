ls- to list all files in that folder

mkdir - create a new folder

cd-change directory to another folder

git init-to initialize the repository create a hidden files

ls -a --> gives hidden files

touch names.txt--->create a new file 

git status ----> gives what files are not added into the git like a history 

git add . ---> adds all the files to the staging area  we can add individual files too

git commit -m  "" -----> commit with message this message is viewed at gui of github

git log ----> to see the history of all the comits

git reset (hash id) ---> resets the project to particular commit and unstage all the edits without deleting them

git stash- ---> to keep a private workspace  if use this it will go to the lastest commit u have done to the project  and hereu can make the chnages
git stash pop ---> the chnages u have done should be used in main repo of your project
git stash clear --> the changes u have done should be cleared 




----------------------------------git hub starts---------------------------
git remote add origin (web link) ---> remote - to deals with link , origin -name fo accessing it 


git push origin ( branch name )---> push it into github



 git branch  (branch name) ---> creates new branch in the repo

 git checkout (branch name)---> to move the head towards this branch there by your commit messages will go into it and updates to 


suppose 2 developers named a and b working in a project and a checkout branch main ,and b is working in branch feature
if we need to merge these 2 chnages together  ,the people who had checkout branch (here a has checkout main) should write git merge feature 
to merge  2 codes.


fork ---> to contribute to an existinng project

pull request to update the main project that u have forked












